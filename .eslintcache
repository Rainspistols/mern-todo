[{"/Users/tata/Documents/Max/my projects/ReactJs/Training/mern-todo/client/src/components/Controls.jsx":"1","/Users/tata/Documents/Max/my projects/ReactJs/Training/mern-todo/client/src/App.js":"2","/Users/tata/Documents/Max/my projects/ReactJs/Training/mern-todo/client/src/components/TodoList.jsx":"3","/Users/tata/Documents/Max/my projects/ReactJs/Training/mern-todo/client/src/utils/services.js":"4","/Users/tata/Documents/Max/my projects/ReactJs/Training/mern-todo/client/src/index.js":"5"},{"size":613,"mtime":1612446463519,"results":"6","hashOfConfig":"7"},{"size":1386,"mtime":1612453114153,"results":"8","hashOfConfig":"7"},{"size":1442,"mtime":1612455298764,"results":"9","hashOfConfig":"7"},{"size":1277,"mtime":1612455446481,"results":"10","hashOfConfig":"7"},{"size":198,"mtime":1612361364132,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"x7aiav",{"filePath":"14","messages":"15","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"18","messages":"19","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"20"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/tata/Documents/Max/my projects/ReactJs/Training/mern-todo/client/src/components/Controls.jsx",[],"/Users/tata/Documents/Max/my projects/ReactJs/Training/mern-todo/client/src/App.js",["23"],"/Users/tata/Documents/Max/my projects/ReactJs/Training/mern-todo/client/src/components/TodoList.jsx",[],"/Users/tata/Documents/Max/my projects/ReactJs/Training/mern-todo/client/src/utils/services.js",["24"],"export default class MongoService {\n  _apiBase = 'http://localhost:5000/api';\n\n  getResource = (url) => {\n    return fetch(`${this._apiBase}${url}`).then((res) => {\n      if (!res.ok) {\n        throw new Error(`Could not fetch ${url}` + `, received ${res.status}`);\n      }\n      return res.json();\n    });\n  };\n\n  postResource = (url, body) => {\n    return fetch(`${this._apiBase}${url}`, {\n      method: 'POST',\n      headers: {\n        Accept: 'application/json',\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify(body),\n    });\n  };\n\n  deleteResource = (url) => {\n    return fetch(`${this._apiBase}${url}`, {\n      method: 'DELETE',\n    });\n  };\n\n  putResource = (url, id, name) => {\n    console.log(url,id, name);\n    return fetch(`${this._apiBase}${url}`, {\n      method: 'PUT',\n      headers: {\n        Accept: 'application/json',\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({ _id: id, name: name }),\n    });\n  };\n\n  getAllTodos = () => this.getResource('/todos');\n  getTodo = (id) => this.getResource(`/todos/${id}`);\n  postTodo = (body) => this.postResource('/todos', body);\n  deleteTodo = (id) => this.deleteResource(`/todos/${id}`);\n  editTodo = (id, name) => this.putResource(`/todos`, id, name);\n}\n","/Users/tata/Documents/Max/my projects/ReactJs/Training/mern-todo/client/src/index.js",[],{"ruleId":"25","severity":1,"message":"26","line":43,"column":75,"nodeType":"27","endLine":43,"endColumn":88},{"ruleId":"28","severity":1,"message":"29","line":7,"column":50,"nodeType":"30","messageId":"31","endLine":7,"endColumn":51},"react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","no-useless-concat","Unexpected string concatenation of literals.","BinaryExpression","unexpectedConcat"]